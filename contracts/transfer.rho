contract @"Transfer"(@fromAddr, @toAddr, @amount, return) = {
  new rl(`rho:registry:lookup`), RevVaultCh in {
    rl!(`rho:rchain:revVault`, *RevVaultCh) |
    for (@(_, RevVault) <- RevVaultCh) {
      new vaultCh, vaultTo, revVaultkeyCh,
        deployerId(`rho:rchain:deployerId`) in {
        @RevVault!("findOrCreate", fromAddr, *vaultCh) |
        @RevVault!("findOrCreate", toAddr, *vaultTo) |
        @RevVault!("deployerAuthKey", *deployerId, *revVaultkeyCh) |
        for (@vault <- vaultCh; key <- revVaultkeyCh; _ <- vaultTo) {
          match vault {
            (true, vault) => {
              new resultCh in {
                @vault!("transfer", toAddr, amount, *key, *resultCh) |
                for (@result <- resultCh) {
                  match result {
                    (true , _  ) => return!((true, "Transfer successful"))
                    (false, err) => return!((false, err))
                  }
                }
              }
            }
            err => {
              return!((false, "REV vault cannot be found or created."))
            }
          }
        }
      }
    }
  }
}
